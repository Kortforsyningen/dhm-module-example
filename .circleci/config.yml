version: 2.1
jobs:
  lint_test_py37_conda:
    docker:
      - image: continuumio/miniconda3
    steps:
      - checkout
      - run:
          name: Install requirements
          command: |
            conda env create -f environment-dev.yml
      - run:
          name: Install dhm_module_example Package
          command: |
            source /opt/conda/etc/profile.d/conda.sh
            conda activate dhm_module_example_dev
            pip install .[dev]
      - run:
          name: Run unit tests
          command: |
            source /opt/conda/etc/profile.d/conda.sh
            conda activate dhm_module_example_dev
            pytest ./tests
            mkdir test-reports
            pytest --junitxml=test-reports/junit.xml ./tests
      - run:
          name: Lint with black
          command: |
            source /opt/conda/etc/profile.d/conda.sh
            conda activate dhm_module_example_dev
            black --check --diff .
      - run:
          name: Lint with pylint
          command: |
            source /opt/conda/etc/profile.d/conda.sh
            conda activate dhm_module_example_dev        
            pylint --rcfile=setup.cfg src
      - run:
          name: Lint with pydocstyle
          command: |
            source /opt/conda/etc/profile.d/conda.sh
            conda activate dhm_module_example_dev        
            pydocstyle -e --add-ignore D100
      - store_test_results:
          path: test-reports
      - store_artifacts:
          path: test-reports

  deploy_pypi:
    docker:
      - image: continuumio/miniconda3
    steps:
      - checkout
      - run:
          name: Install requirements
          command: |
            conda env create -f environment-dev.yml
            source /opt/conda/etc/profile.d/conda.sh
            conda activate dhm_module_example_dev
            pip install twine
      - run:
          name: "Verify git tag matches package version"
          command: |
            source /opt/conda/etc/profile.d/conda.sh
            conda activate dhm_module_example_dev
            python setup.py verify
      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = $PYPI_USER" >> ~/.pypirc
            echo -e "password = $PYPI_PASS" >> ~/.pypirc
      - run:
          name: Create PyPi package
          command: |
            source /opt/conda/etc/profile.d/conda.sh
            conda activate dhm_module_example_dev
            python setup.py sdist
            python setup.py bdist_wheel
      - run:
          name: Upload to PyPi using twine
          command: |
            source /opt/conda/etc/profile.d/conda.sh
            conda activate dhm_module_example_dev
            twine upload dist/*
workflows:
  build-and-deploy:
    jobs:
      - lint_test_py37_conda:
          name: lint_test
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/
      - deploy_pypi:
          requires:
            - lint_test
          filters:
            tags: # Only publish a github release after a build if tag matches convention
              only: /[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
